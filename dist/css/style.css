@import url("https://fonts.googleapis.com/css2?family=Fira+Code:wght@400;700&family=Heebo:wght@400;700&display=swap");
html {
  box-sizing: border-box; }

*,
*::before,
*::after {
  box-sizing: inherit; }

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

body {
  margin: 0; }

main {
  display: block; }

hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

a {
  background-color: transparent;
  text-decoration: none;
  color: inherit; }

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

h1, h2, h3, h4, h5, h6 {
  margin: 0;
  padding: 0;
  font-size: inherit;
  font-weight: inherit; }

b,
strong {
  font-weight: bolder; }

code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

code {
  background-color: rgba(0, 0, 0, 0.2);
  padding: 0 4px;
  border-radius: 3px; }

ul, ol, dd {
  padding: 0; }

kbd {
  background-color: #eee;
  border-radius: 3px;
  border: 1px solid #b4b4b4;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2), 0 2px 0 0 rgba(255, 255, 255, 0.7) inset;
  color: inherit;
  display: inline-block;
  font-weight: 700;
  padding: 2px 4px; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

img {
  border-style: none;
  vertical-align: middle;
  width: 100%; }

figure,
p,
ul, ol, dd {
  margin: 0; }

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  line-height: 1.15;
  margin: 0; }

button {
  background-color: none;
  color: inherit;
  cursor: pointer; }

button,
input {
  /* 1 */
  overflow: visible; }

button,
select {
  /* 1 */
  text-transform: none; }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

fieldset {
  padding: 0;
  margin: 0;
  border-width: 0; }

legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

progress {
  vertical-align: baseline; }

textarea {
  overflow: auto; }

label {
  display: block; }

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

[type="submit"],
[type="button"],
[type="reset"] {
  cursor: pointer; }

*:disabled {
  cursor: not-allowed; }

button:disabled {
  color: rgba(16, 16, 16, 0.3); }

details {
  display: block; }

summary {
  display: list-item; }

template {
  display: none; }

[hidden] {
  display: none; }

th {
  text-align: left; }

@keyframes hover {
  from {
    width: 0%; }
  to {
    width: 100%; } }

.cc__background {
  background: var(--gradient-main); }

.navigation {
  --primary: hsl(252, 100%, 79%);
  --text-color: hsl(244, 100%, 97%);
  --headline-color: hsl(252, 100%, 86%);
  --gradient-main: linear-gradient(
    218deg,
    hsl(252, 100%, 84%) 0%,
    hsl(252, 100%, 79%) 100%
  );
  --gradient-light: linear-gradient(
    218deg,
    hsl(252, 100%, 87%) 0%,
    hsl(252, 100%, 90%) 100%
  ); }

.input {
  --primary: hsl(302, 84%, 76%);
  --text-color: hsl(300, 81%, 96%);
  --headline-color: hsl(302, 82%, 83%);
  --gradient-main: linear-gradient(
    218deg,
    hsl(302, 88%, 89%) 0%,
    hsl(302, 84%, 76%) 100%
  );
  --gradient-light: linear-gradient(
    218deg,
    hsl(302, 80%, 83%) 0%,
    hsl(302, 78%, 92%) 100%
  ); }

.list-pattern {
  --primary: hsl(2, 95%, 72%);
  --text-color: hsl(2, 89%, 93%);
  --headline-color: hsl(2, 100%, 77%);
  --gradient-main: linear-gradient(
    218deg,
    hsl(2, 94%, 76%) 0%,
    hsl(2, 94%, 72%) 100%
  );
  --gradient-light: linear-gradient(
    218deg,
    hsl(2, 94%, 77%) 0%,
    hsl(2, 93%, 81%) 100%
  ); }

.content {
  --primary: hsl(32, 92%, 68%);
  --text-color: hsl(32, 92%, 100%);
  --headline-color: hsl(32, 92%, 78%);
  --gradient-main: linear-gradient(
    218deg,
    hsl(37, 92%, 76%) 0%,
    hsl(32, 92%, 68%) 100%
  );
  --gradient-light: linear-gradient(
    218deg,
    hsl(33, 91%, 81%) 0%,
    hsl(38, 85%, 81%) 100%
  ); }

.interaction {
  --primary: hsl(272, 100%, 79%);
  --text-color: hsl(270, 100%, 96%);
  --headline-color: hsl(272, 100%, 86%);
  --gradient-main: linear-gradient(
    218deg,
    hsl(272, 100%, 84%) 0%,
    hsl(272, 100%, 79%) 100%
  );
  --gradient-light: linear-gradient(
    218deg,
    hsl(272, 100%, 87%) 0%,
    hsl(272, 100%, 90%) 100%
  ); }

.template {
  --primary: hsl(332, 92%, 76%);
  --text-color: hsl(332, 90%, 96%);
  --headline-color: hsl(332, 90%, 86%);
  --gradient-main: linear-gradient(
    218deg,
    hsl(332, 92%, 80%) 0%,
    hsl(332, 90%, 76%) 100%
  );
  --gradient-light: linear-gradient(
    218deg,
    hsl(332, 92%, 80%) 0%,
    hsl(332, 93%, 85%) 100%
  ); }

::selection {
  background-color: #135076;
  color: #fff; }

:root {
  --fs-base: 1.125rem;
  --spacer: 0.5rem;
  --primary: hsl(203, 89%, 46%);
  --text-color: hsl(203, 72%, 27%);
  --headline-color: var(--text-color);
  --gradient-main: linear-gradient(
    218deg,
    hsl(203, 89%, 46%) 0%,
    hsl(195, 100%, 63%) 100%
  ); }

body {
  display: grid;
  grid-gap: calc(var(--spacer) * 3);
  overflow-x: hidden; }
  @media (min-width: 768px) {
    body {
      grid-gap: calc(var(--spacer) * 8); } }

.main {
  width: 100%;
  min-width: 0;
  /*to prevent grid blowout*/
  max-width: 90rem;
  margin: 0 auto;
  padding: calc(var(--spacer) * 3) calc(var(--spacer) * 2); }
  @media (min-width: 1340px) {
    .main {
      padding: calc(var(--spacer) * 3) calc(var(--spacer) * 8); } }

.section {
  margin-bottom: calc(var(--spacer) * 8); }

body {
  font-family: "Heebo", sans-serif;
  font-size: var(--fs-base);
  line-height: 1.6;
  color: #135076; }

.headline {
  --fs-h1: calc(var(--fs-base) + 1.125rem);
  --fs-h2: calc(var(--fs-base) + 0.625rem);
  --fs-h3: calc(var(--fs-base) + 0.375rem);
  font-family: "Fira Code", monospace;
  font-weight: 700;
  letter-spacing: 0.5px;
  line-height: 1.2; }
  @media (min-width: 768px) {
    .headline {
      --fs-h1: calc(var(--fs-base) + 1.375rem);
      --fs-h2: calc(var(--fs-base) + 0.875rem); } }

.h1 {
  font-size: var(--fs-h1); }

.h2 {
  font-size: var(--fs-h2);
  line-height: 1.4; }

.h3 {
  font-size: var(--fs-h3);
  line-height: 1.4; }

.code {
  font-family: "Fira Code", monospace; }

.small {
  font-size: calc(var(--fs-base) - 0.25rem); }

.h1,
.h2,
.h3,
.intro {
  margin-bottom: calc(var(--spacer) * 2); }

.h2 {
  margin-bottom: calc(var(--spacer) * 3); }

.text {
  margin-bottom: var(--spacer); }

.text + .h3 {
  margin-top: calc(var(--spacer) * 3); }

.h1 {
  position: relative; }
  .h1:after {
    content: "";
    position: absolute;
    margin-left: 8px;
    margin-top: 3px;
    height: 32px;
    width: 1px;
    background-color: #bce3fb;
    border: 1px solid #bce3fb;
    border-radius: 10px; }
  @media (min-width: 768px) {
    .h1:after {
      height: 48px;
      margin-top: 0; } }

.focus {
  background-color: #bce3fb; }

.list {
  margin-left: calc(var(--spacer) * 3); }
  .list__item::marker {
    color: #0d8ede;
    font-size: var(--fs-base); }

.custom-logo {
  height: 3rem; }

.current-menu-item:after, .page_item:hover:after,
.menu-item:hover:after, .footer .current_page_item:after, .footer .page_item:hover:after,
.footer .menu-item:hover:after {
  content: "";
  position: absolute;
  height: 2px;
  width: 100%;
  left: 0; }

.menu {
  position: relative;
  display: grid;
  grid-gap: 0 calc(var(--spacer) * 5);
  grid-auto-flow: column;
  white-space: nowrap;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  -ms-overflow-style: -ms-autohiding-scrollbar;
  margin-left: calc(var(--spacer) * 2);
  list-style-type: none;
  padding-bottom: calc(var(--spacer) * 3);
  border-bottom: 1px solid #aec2d0; }
  .menu::-webkit-scrollbar {
    display: none; }
  @media (min-width: 1340px) {
    .menu {
      border: none;
      padding-bottom: 0;
      overflow: visible; } }

.current-menu-item {
  position: relative; }
  .current-menu-item:after {
    border-bottom: 2px solid var(--primary);
    bottom: -24px; }
    @media (min-width: 1340px) {
      .current-menu-item:after {
        bottom: -34px; } }

.page_item,
.menu-item {
  position: relative; }
  .page_item:hover:after,
  .menu-item:hover:after {
    border-bottom: 2px solid var(--primary);
    bottom: -34px;
    animation: hover 0.3s; }

.footer .menu {
  border-top: 1px solid #aec2d0;
  border-bottom: 0;
  padding: calc(var(--spacer) * 3) calc(var(--spacer) * 2) 0;
  margin-left: 0;
  overflow: visible; }
  @media (min-width: 768px) {
    .footer .menu {
      border-top: 0;
      padding: 0; } }

.footer .current_page_item {
  position: relative; }
  .footer .current_page_item:after {
    border-bottom: 2px solid var(--primary);
    top: -24px; }
    @media (min-width: 1340px) {
      .footer .current_page_item:after {
        bottom: -34px; } }

.footer .page_item,
.footer .menu-item {
  position: relative; }
  .footer .page_item:hover:after,
  .footer .menu-item:hover:after {
    border-top: 1px solid var(--primary);
    top: -25px;
    animation: hover 0.3s; }

.tag {
  font-size: 0.75rem;
  padding: 0.25rem 0.5rem;
  background-color: #ecf7fe;
  border-radius: 0.625rem; }

.card {
  display: inline-block;
  width: 100%;
  border-radius: 0.625rem;
  border: 1px solid #aec2d0;
  box-shadow: 0 1px 8px -2px rgba(14, 79, 119, 0.1), 0 2px 3px -2px rgba(14, 79, 119, 0.06), 0 2px 4px -2px rgba(14, 79, 119, 0.07);
  transition: all 0.3s ease-in-out; }
  .card:hover {
    box-shadow: 0 3px 5px -1px rgba(14, 79, 119, 0.1), 0 1px 18px 0 rgba(14, 79, 119, 0.06), 0 6px 10px 0 rgba(14, 79, 119, 0.07); }
  .card__head {
    padding: calc(var(--spacer) * 3) 0;
    max-height: 23.5rem;
    display: flex;
    justify-content: center;
    border-radius: 0.625rem 0.625rem 0 0; }
  .card__image {
    height: 100%;
    width: auto; }
  .card__tags {
    margin-bottom: calc(var(--spacer) * 2); }
    .card__tags > *:not(:last-of-type) {
      margin-right: calc(var(--spacer) * 2); }
  .card__headline {
    margin-bottom: calc(var(--spacer) * 3); }
  .card__body {
    padding: calc(var(--spacer) * 3); }
  .card__link {
    display: inline-block;
    position: relative;
    --primary: hsl(203, 89%, 46%); }
    .card__link::before {
      content: url("/snaple/wp-content/uploads/2021/04/call-to-action.svg");
      margin-right: var(--spacer); }

.header {
  overflow-y: hidden;
  padding: calc(var(--spacer) * 3) 0 0;
  display: grid;
  grid-gap: calc(var(--spacer) * 5);
  text-align: center; }
  @media (min-width: 1340px) {
    .header {
      padding: calc(var(--spacer) * 3) calc(var(--spacer) * 8);
      border-bottom: 1px solid #aec2d0;
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center; } }

.footer {
  display: grid;
  grid-gap: calc(var(--spacer) * 3);
  padding: calc(var(--spacer) * 3) 0; }
  @media (min-width: 768px) {
    .footer {
      display: flex;
      justify-content: space-between;
      border-top: 1px solid #aec2d0;
      padding: calc(var(--spacer) * 3) calc(var(--spacer) * 2); } }
  @media (min-width: 1340px) {
    .footer {
      padding: calc(var(--spacer) * 3) calc(var(--spacer) * 8); } }
  .footer-social {
    display: grid;
    grid-auto-flow: column;
    align-items: center;
    grid-gap: calc(var(--spacer) * 5); }
    .footer-social__icon {
      width: 20px;
      height: auto; }
      .footer-social__icon--github:hover path {
        stroke: var(--primary); }
      .footer-social__icon--codepen:hover path {
        fill: var(--primary); }

.section__intro {
  max-width: 38.5rem; }

.pattern__container {
  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: 80vw;
  gap: calc(var(--spacer) * 3);
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  -ms-overflow-style: -ms-autohiding-scrollbar; }
  @media (min-width: 768px) {
    .pattern__container {
      grid-auto-columns: 28.3125rem; } }
  @media (min-width: 1340px) {
    .pattern__container {
      overflow-x: visible; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
